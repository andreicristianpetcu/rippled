# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/trusty64"
  #config.vm.box_url = "https://github.com/kraksoft/vagrant-box-ubuntu/releases/download/14.04/ubuntu-14.04-amd64.box"

  config.vm.provision :shell, :inline => <<-EOT
     sudo sed -i '/LC_ALL=/d' /etc/default/locale
     echo 'LC_ALL="en_US.UTF-8"' |sudo tee -a /etc/default/locale
  EOT

  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.customize ["modifyvm", :id, "--cpus", 1]
    # v.gui = true
  end

  config.vm.synced_folder "../..", "/src"

  $script = <<-SCRIPT
    #!/bin/bash
	# build
    apt-get update
    apt-get -y upgrade
    apt-get -y install git scons pkg-config protobuf-compiler libprotobuf-dev libssl-dev tmux flip
    apt-get install python-software-properties
    echo "deb [arch=amd64] http://mirrors.ripple.com/ubuntu/ trusty stable contrib" | tee /etc/apt/sources.list.d/ripple.list 
    wget -O- -q http://mirrors.ripple.com/mirrors.ripple.com.gpg.key | apt-key add -
    apt-get -y update
    apt-get install -y build-essential g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev 
    apt-get install -y boost-all-dev
    cd /src/ && scons release
	(service rippled stop &) || true
    cp /src/build/gcc.release/rippled /usr/local/sbin/rippled && strip /usr/local/sbin/rippled
	# configs
	mkdir -p /etc/ripple/
	mkdir -p /root/.config/ripple/
	mkdir -p /home/vagrant/.config/ripple/
    cp /src/Builds/Vagrant/rippled.cfg /etc/ripple/rippled.cfg
	cp /src/Builds/Vagrant/rippled.cfg /root/.config/ripple/rippled.cfg
	cp /src/Builds/Vagrant/rippled.cfg /home/vagrant/.config/ripple/rippled.cfg
	cp /src/Builds/Vagrant/validators.txt /etc/ripple/validators.txt
	# service
	cp /src/Builds/Vagrant/init.d_rippled /etc/init.d/rippled
    chmod +x /etc/init.d/rippled
	flip -u /etc/init.d/rippled
	flip -u /etc/ripple/validators.txt
  SCRIPT

  config.vm.provision :shell, :inline => $script

  config.vm.define "one", primary: true do |one|
    one.vm.network "private_network", ip: "192.168.50.4"
    one.vm.network "forwarded_port", guest: 18080, host: 18080, auto_correct: true
    one.vm.provider :virtualbox do |vb|
      vb.memory = 4096
      vb.customize ["modifyvm", :id, "--cpus", 2]
    end
    $rippleclient_one = <<-SCRIPT
      #!/bin/bash
      cp /src/Builds/Vagrant/rippled_one.cfg /etc/ripple/rippled.cfg
	  flip -u /etc/ripple/rippled.cfg
	  service rippled start
    SCRIPT

    config.vm.provision :shell, :inline => $rippleclient_one
  end

  config.vm.define "two", primary: true do |two|
    two.vm.network "private_network", ip: "192.168.50.5"
	
	$rippleclient_two = <<-SCRIPT
      #!/bin/bash
      cp /src/Builds/Vagrant/rippled_two.cfg /etc/ripple/rippled.cfg
	  flip -u /etc/ripple/rippled.cfg
	  service rippled start
    SCRIPT

    config.vm.provision :shell, :inline => $rippleclient_two
  end

  config.vm.define "three", primary: true do |three|
    three.vm.network "private_network", ip: "192.168.50.6"
	
	$rippleclient_three = <<-SCRIPT
      #!/bin/bash
      cp /src/Builds/Vagrant/rippled_three.cfg /etc/rippled.cfg
	  flip -u /etc/ripple/rippled.cfg
	  service rippled start
    SCRIPT

    config.vm.provision :shell, :inline => $rippleclient_three
  end
  
  # Let's have only 3 nodes for now
  # config.vm.define "four", primary: true do |four|
    # four.vm.network "private_network", ip: "192.168.50.7"
  # end

  # config.vm.define "five", primary: true do |five|
    # five.vm.network "private_network", ip: "192.168.50.8"
  # end
end
